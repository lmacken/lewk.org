bodhi
#mdate Feb 14 21:12:36 2007
#tags Fedora,bodhi,code
<p><p>
So I've been spending the majority of my free time recently getting the new <a href="http://fedoraproject.org/wiki/Infrastructure/UpdatesSystem">Fedora Updates System</a> ready for Fedora 7, which is quickly approaching.  Since the code is going to exist in multiple instances for different projects (Fedora, RH, etc), and is already fairly modular and distro-independent, I decided it would be best to give the code a new name, and a new home:  <a href="https://hosted.fedoraproject.org/projects/bodhi"><b>Bodhi</b></a> emerged.  Being hardcore into <a href="http://en.wikipedia.org/wiki/Zen">Zen</a> recently, I feel like the name seems to fit the goals of the project nicely.
</p><blockquote><code><i>A Buddhist term for the wisdom by which one attains enlightenment. Bodhi is the opposite of ignorance, the insight into reality which destroys mental afflictions and brings peace.</i></code></blockquote>

<p>
Previously, the updates system code was in CVS, and bugs were to be filed in <a href="https://admin.fedoraproject.org/tickets">OTRS</a>, which ended up being extremely painful to work with.  After switching to our new shiny hosting setup, Bodhi is now using Mercurial for source control, and Trac for managing the project milestones, bugs, and documentation.  Overall, I've been extremely impressed with Mercurial and Trac so far.
</p>
<p>
Here are some screenshots of the current development version.  More screenshots can be found on the <a href="https://hosted.fedoraproject.org/projects/bodhi/wiki">bodhi wiki</a>.
<br/></p><center>
<table><tr><td><a href="https://hosted.fedoraproject.org/projects/bodhi/attachment/wiki/Screenshots/bodhi-new.png"><img src="http://lewk.org/img/bodhi-new.thumb.png"/></a>
</td><td>
<a href="https://hosted.fedoraproject.org/projects/bodhi/attachment/wiki/Screenshots/bodhi-show.png"><img src="http://lewk.org/img/bodhi-show.thumb.png"/></a></td>
</tr><tr><td>
<a href="https://hosted.fedoraproject.org/projects/bodhi/attachment/wiki/Screenshots/bodhi-list.png"><img src="http://lewk.org/img/bodhi-list.thumb.png"/></a>
</td>
<td>
<a href="https://hosted.fedoraproject.org/projects/bodhi/attachment/wiki/Screenshots/bodhi-push.png"><img src="http://lewk.org/img/bodhi-push.thumb.png"/></a></td></tr></table></center>

<p>
<b>So what's going to change for Fedora developers?</b>
Well, currently any [extras] developer can push out updates to their packages for any release with ease (<code>cvs commit &amp;&amp; make tag build</code>).  If your updated package fixes 4 bugs and 2 CVE's, the end user who is blindly installing this update has no idea.  Not only is there no differentiation between bugfix/enhancement/security updates, but none of them go through any sort of QA whatsoever.  This is what bodhi is aiming to change.
</p>
<p>
I've been designing this system completely independent of any Buildsystem (mainly because the <a href="http://fedoraproject.org/wiki/FedoraSummit/NewBuildSystem">unveiling of brew</a> is still churning slowly), so the process of building packages is going to remain the same (for now).  Once your packages is built, you will enter it into bodhi via a web form, or [<a href="https://hosted.fedoraproject.org/projects/bodhi/ticket/5">eventually</a>] a command-line tool (Ideally, I'd like to see the process of preparing/testing/releasing a package to be a single point of interaction; either completely from command-line or in web interface).  From here, your update will undergo various checks (and will eventually dispatch tests to the <a href="https://hosted.fedoraproject.org/projects/beaker">beaker</a> test lab).  If all goes well, your update will get signed and pushed, all referenced Bugzillas will be updated/closed, and an update notification mail will be sent to the appropriate list.
</p>
<p>
<b>updates-testing</b> is currently our "testing" repository that developers can choose to push their updates out to before going to 'final'.  This is not very appealing for devs, as it requires them to 'Move to final' after a certain amount of time when they feel it is necessary, and the system will nag them if they don't.  The updates-testing repo is not widely used, and gives testers no incentive or way to give feedback, other than filing a bug.  One of the <a href="https://hosted.fedoraproject.org/projects/bodhi/ticket/9">goals</a> of bodhi is to require all updates to go through the updates-testing process, and provide a simple interface for developers/testers/users to provide positive/negative feedback regarding an update, and also make it trivial to submit bugs about them as well (we threw around some ideas about making a reusable QA feedback widget for this at a recent <a href="http://fedoraproject.org/wiki/QA/Meetings/20070117">Fedora QA meeting</a>).  After a certain number of positive responses (or after a given length of time with no negative responses), an update will then able to make it's way to the stable updates repository.
</p>
<p>
<b>Hackery</b><br/>
I've written a ton of <a href="https://hosted.fedoraproject.org/projects/bodhi/browser">code</a> so far, but there is still much work to be done to accomplish all of the goals mentioned above.  I layed out a few <a href="https://hosted.fedoraproject.org/projects/bodhi/roadmap">milestones</a> for bodhi, 1.0 being the minimal functionality needed for the release of Fedora 7.  I also added a 1.1 milestone for features that aren't crucial for minimal functionality, but are definitely important, and also a wishlist milestone for features that might be nice to have someday (metrics, rss feeds, etc).
</p>
<p>
With <a href="http://barcamp.org/FudconBoston2007">FUDCon</a> and the <a href="http://fedoraproject.org/wiki/Infrastructure/HackFest2007">Fedora Infrastructure HackFest</a> coming up, I'm encouraging anyone interested to dive in help out in any way they want.  If you can't make it out to Boston, just hop on IRC.  If you would like to see a feature in bodhi, feel free to add a ticket to any of the milestones.
</p>
<p>
This system holds much potential for revolutionizing the way Fedora releases evolve, and how developers and testers interact with it.  Since this is going to be utilized by all package maintainers, it's important that the system is molded to fit the needs of the developers and testers; so if you have any suggestions/improvements/fixes, don't hesitate:  <b>Contribute</b>.
</p></p>
